basePath: /api/v1
definitions:
  httpserver.actorData:
    properties:
      first_name:
        type: string
      gender:
        $ref: '#/definitions/model.Gender'
      id:
        type: integer
      movies:
        items:
          $ref: '#/definitions/httpserver.movieData'
        type: array
      second_name:
        type: string
    type: object
  httpserver.actorListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/httpserver.actorData'
        type: array
      error:
        type: string
    type: object
  httpserver.actorResponse:
    properties:
      data:
        $ref: '#/definitions/httpserver.actorData'
      error:
        type: string
    type: object
  httpserver.createActorData:
    properties:
      first_name:
        type: string
      gender:
        $ref: '#/definitions/model.Gender'
      second_name:
        type: string
    type: object
  httpserver.createMovieData:
    properties:
      actors:
        items:
          type: integer
        type: array
      description:
        type: string
      rating:
        type: number
      release_date:
        type: integer
      title:
        type: string
    type: object
  httpserver.movieData:
    properties:
      actors:
        items:
          $ref: '#/definitions/httpserver.actorData'
        type: array
      description:
        type: string
      id:
        type: integer
      rating:
        type: number
      release_date:
        type: integer
      title:
        type: string
    type: object
  httpserver.movieListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/httpserver.movieData'
        type: array
      error:
        type: string
    type: object
  httpserver.movieResponse:
    properties:
      data:
        $ref: '#/definitions/httpserver.movieData'
      error:
        type: string
    type: object
  httpserver.updateActorData:
    properties:
      first_name:
        type: string
      gender:
        $ref: '#/definitions/model.Gender'
      second_name:
        type: string
    type: object
  httpserver.updateMovieData:
    properties:
      actors:
        items:
          type: integer
        type: array
      description:
        type: string
      rating:
        type: number
      release_date:
        type: integer
      title:
        type: string
    type: object
  model.Gender:
    enum:
    - ""
    - male
    - female
    type: string
    x-enum-varnames:
    - Unknown
    - Male
    - Female
host: localhost:8080
info:
  contact: {}
  description: Swagger документация к API фильмотеки
  title: movie-lib
  version: "1.0"
paths:
  /actors:
    delete:
      description: Удаляет актёра по id
      parameters:
      - description: id актёра
        in: query
        name: actor_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Пустая структура
          schema:
            $ref: '#/definitions/httpserver.actorResponse'
        "400":
          description: Неверный формат входных данных
          schema:
            $ref: '#/definitions/httpserver.actorResponse'
        "401":
          description: Ошибка авторизации
          schema:
            $ref: '#/definitions/httpserver.actorResponse'
        "403":
          description: Ошибка авторизации
          schema:
            $ref: '#/definitions/httpserver.actorResponse'
        "404":
          description: Актёра не существует
          schema:
            $ref: '#/definitions/httpserver.actorResponse'
        "500":
          description: Проблемы на стороне сервера
          schema:
            $ref: '#/definitions/httpserver.actorResponse'
      security:
      - ApiKeyAuth: []
      summary: Удаление актёра
      tags:
      - actors
    get:
      description: Возвращает актёра с указанным id
      parameters:
      - description: id актёра
        in: query
        name: actor_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Информация об актёре
          schema:
            $ref: '#/definitions/httpserver.actorResponse'
        "400":
          description: Неверный формат входных данных
          schema:
            $ref: '#/definitions/httpserver.actorResponse'
        "401":
          description: Ошибка авторизации
          schema:
            $ref: '#/definitions/httpserver.actorResponse'
        "403":
          description: Ошибка авторизации
          schema:
            $ref: '#/definitions/httpserver.actorResponse'
        "404":
          description: Актёра не существует
          schema:
            $ref: '#/definitions/httpserver.actorResponse'
        "500":
          description: Проблемы на стороне сервера
          schema:
            $ref: '#/definitions/httpserver.actorResponse'
      security:
      - ApiKeyAuth: []
      summary: Получение актёра
      tags:
      - actors
    post:
      consumes:
      - application/json
      description: Добавляет нового актёра
      parameters:
      - description: Информация о новом актёре
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/httpserver.createActorData'
      produces:
      - application/json
      responses:
        "200":
          description: Информация об актёре
          schema:
            $ref: '#/definitions/httpserver.actorResponse'
        "400":
          description: Неверный формат входных данных
          schema:
            $ref: '#/definitions/httpserver.actorResponse'
        "401":
          description: Ошибка авторизации
          schema:
            $ref: '#/definitions/httpserver.actorResponse'
        "403":
          description: Ошибка авторизации
          schema:
            $ref: '#/definitions/httpserver.actorResponse'
        "500":
          description: Проблемы на стороне сервера
          schema:
            $ref: '#/definitions/httpserver.actorResponse'
      security:
      - ApiKeyAuth: []
      summary: Добавление актёра
      tags:
      - actors
    put:
      consumes:
      - application/json
      description: Обновляет поля актёра по id
      parameters:
      - description: id актёра
        in: query
        name: actor_id
        required: true
        type: string
      - description: Новые поля
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/httpserver.updateActorData'
      produces:
      - application/json
      responses:
        "200":
          description: Информация об актёре
          schema:
            $ref: '#/definitions/httpserver.actorResponse'
        "400":
          description: Неверный формат входных данных
          schema:
            $ref: '#/definitions/httpserver.actorResponse'
        "401":
          description: Ошибка авторизации
          schema:
            $ref: '#/definitions/httpserver.actorResponse'
        "403":
          description: Ошибка авторизации
          schema:
            $ref: '#/definitions/httpserver.actorResponse'
        "404":
          description: Актёра не существует
          schema:
            $ref: '#/definitions/httpserver.actorResponse'
        "500":
          description: Проблемы на стороне сервера
          schema:
            $ref: '#/definitions/httpserver.actorResponse'
      security:
      - ApiKeyAuth: []
      summary: Обновление полей актёра
      tags:
      - actors
  /actors/list:
    get:
      description: Возвращает список актёров
      produces:
      - application/json
      responses:
        "200":
          description: Информация об актёрах
          schema:
            $ref: '#/definitions/httpserver.actorListResponse'
        "401":
          description: Ошибка авторизации
          schema:
            $ref: '#/definitions/httpserver.actorListResponse'
        "403":
          description: Ошибка авторизации
          schema:
            $ref: '#/definitions/httpserver.actorListResponse'
        "500":
          description: Проблемы на стороне сервера
          schema:
            $ref: '#/definitions/httpserver.actorListResponse'
      security:
      - ApiKeyAuth: []
      summary: Получение списка актёров
      tags:
      - actors
  /movies:
    delete:
      consumes:
      - application/json
      description: Удаление фильма по id
      parameters:
      - description: id фильма
        in: query
        name: movie_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Пустая структура
          schema:
            $ref: '#/definitions/httpserver.movieResponse'
        "400":
          description: Неверный формат входных данных
          schema:
            $ref: '#/definitions/httpserver.movieResponse'
        "401":
          description: Ошибка авторизации
          schema:
            $ref: '#/definitions/httpserver.movieResponse'
        "403":
          description: Ошибка авторизации
          schema:
            $ref: '#/definitions/httpserver.movieResponse'
        "404":
          description: Фильма не существует
          schema:
            $ref: '#/definitions/httpserver.movieResponse'
        "500":
          description: Проблемы на стороне сервера
          schema:
            $ref: '#/definitions/httpserver.movieResponse'
      security:
      - ApiKeyAuth: []
      summary: Удаление фильма
      tags:
      - movies
    get:
      consumes:
      - application/json
      description: Возвращает фильм с указанным id
      parameters:
      - description: id фильма
        in: query
        name: movie_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Пустая структура
          schema:
            $ref: '#/definitions/httpserver.movieResponse'
        "400":
          description: Неверный формат входных данных
          schema:
            $ref: '#/definitions/httpserver.movieResponse'
        "401":
          description: Ошибка авторизации
          schema:
            $ref: '#/definitions/httpserver.movieResponse'
        "403":
          description: Ошибка авторизации
          schema:
            $ref: '#/definitions/httpserver.movieResponse'
        "404":
          description: Фильма не существует
          schema:
            $ref: '#/definitions/httpserver.movieResponse'
        "500":
          description: Проблемы на стороне сервера
          schema:
            $ref: '#/definitions/httpserver.movieResponse'
      security:
      - ApiKeyAuth: []
      summary: Получение фильма по id
      tags:
      - movies
    post:
      consumes:
      - application/json
      description: Добавляет новый фильм
      parameters:
      - description: Информация о новом фильме
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/httpserver.createMovieData'
      produces:
      - application/json
      responses:
        "200":
          description: Информация о фильме
          schema:
            $ref: '#/definitions/httpserver.movieResponse'
        "400":
          description: Неверный формат входных данных
          schema:
            $ref: '#/definitions/httpserver.movieResponse'
        "401":
          description: Ошибка авторизации
          schema:
            $ref: '#/definitions/httpserver.movieResponse'
        "403":
          description: Ошибка авторизации
          schema:
            $ref: '#/definitions/httpserver.movieResponse'
        "404":
          description: Актёра из списка не существует
          schema:
            $ref: '#/definitions/httpserver.movieResponse'
        "500":
          description: Проблемы на стороне сервера
          schema:
            $ref: '#/definitions/httpserver.movieResponse'
      security:
      - ApiKeyAuth: []
      summary: Добавление фильма
      tags:
      - movies
    put:
      consumes:
      - application/json
      description: Обновляет поля фильма по id
      parameters:
      - description: id фильма
        in: query
        name: movie_id
        required: true
        type: string
      - description: Новые поля
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/httpserver.updateMovieData'
      produces:
      - application/json
      responses:
        "200":
          description: Информация о фильме
          schema:
            $ref: '#/definitions/httpserver.movieResponse'
        "400":
          description: Неверный формат входных данных
          schema:
            $ref: '#/definitions/httpserver.movieResponse'
        "401":
          description: Ошибка авторизации
          schema:
            $ref: '#/definitions/httpserver.movieResponse'
        "403":
          description: Ошибка авторизации
          schema:
            $ref: '#/definitions/httpserver.movieResponse'
        "404":
          description: Фильма либо актёра из списка не существует
          schema:
            $ref: '#/definitions/httpserver.movieResponse'
        "500":
          description: Проблемы на стороне сервера
          schema:
            $ref: '#/definitions/httpserver.movieResponse'
      security:
      - ApiKeyAuth: []
      summary: Обновление фильма
      tags:
      - movies
  /movies/list:
    get:
      consumes:
      - application/json
      description: Возвращает список фильмов
      parameters:
      - description: Поиск по названию фильма/фамилии/имени актёра
        in: query
        name: pattern
        type: string
      - description: 'Параметр для сортировки. Поддерживаемые параметры: title, rating,
          release_date'
        in: query
        name: sort_by
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Информация о фильмах
          schema:
            $ref: '#/definitions/httpserver.movieListResponse'
        "400":
          description: Неверный формат входных данных
          schema:
            $ref: '#/definitions/httpserver.movieListResponse'
        "401":
          description: Ошибка авторизации
          schema:
            $ref: '#/definitions/httpserver.movieListResponse'
        "403":
          description: Ошибка авторизации
          schema:
            $ref: '#/definitions/httpserver.movieListResponse'
        "500":
          description: Проблемы на стороне сервера
          schema:
            $ref: '#/definitions/httpserver.movieListResponse'
      security:
      - ApiKeyAuth: []
      summary: Получение списка фильмов
      tags:
      - movies
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
